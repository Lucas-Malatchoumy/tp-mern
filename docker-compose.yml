version: '3.0'
services:
  client:
    build: ./client
    container_name: client
    ports:
      - '3000:3000'
    volumes:
      - './client:/home/client_node/app'
      - '/home/client_node/app/node_modules'
    networks:
      - client-to-server
    env_file:
      - .env
  server:
    build: ./server
    container_name: server
    ports:
      - '3001:3001'
    links:
      - mongo
    depends_on:
      - mongo
    volumes:
      - './server:/home/server_node/app'
      - '/home/server_node/app/node_modules'
    networks:
      - client-to-server
      - server-to-db
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - '27017:27017'
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
    - mongo:/data/db
    - ./server/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - server-to-db
  elasticsearch:
    image: elasticsearch:8.9.1
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
    healthcheck:
      test: ['CMD-SHELL', 'curl --silent --fail localhost:9200/_cluster/health || exit 1']
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elastic
  logstash:
    image: logstash:8.9.1
    container_name: logstash
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: '-Xms512m -Xmx512m'
    volumes:
      - './logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf'
    ports:
      - "5001:5000"
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - elastic
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
  kibana:
    image: kibana:8.9.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTIC_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elastic
  filebeat:
    depends_on:
      - elasticsearch
    image: docker.elastic.co/beats/filebeat:8.9.1
    user: root
    container_name: filebeat
    volumes:
      - "./server/logs/:/usr/share/filebeat/ingest_data/"
      - "./filebeat.yml:/usr/share/filebeat/filebeat.yml"
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind  
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    command: filebeat -e -c /usr/share/filebeat/filebeat.yml
    environment:
     - ELASTIC_HOSTS=http://elasticsearch:9200
     - KIBANA_HOSTS=http://kibana:5601
     - LOGSTASH_HOSTS=http://logstash01:9600
    networks:
      - elastic
networks:
  client-to-server:
    driver: bridge
  server-to-db:
    driver: bridge
  elastic:
    driver: bridge
volumes:
  mongo: